---
interface Props {
  images: Array<{
    id: string;
    src: string;
    alt: string;
    width?: number;
    height?: number;
  }>;
}

const { images } = Astro.props;
---

<div class="masonry-grid">
  {images.map((img) => (
    <div class="masonry-item cursor-pointer relative" data-id={img.id}>
      <img
        src={img.src}
        alt={img.alt}
        width={img.width || 800}
        height={img.height || 1000}
        class="masonry-image w-full h-auto object-cover rounded-lg block bg-gray-200 dark:bg-gray-800"
        loading="lazy"
      />
    </div>
  ))}
</div>

<style>
  .masonry-grid {
    column-count: 1;
    column-gap: 24px;
    width: 100%;
  }

  /* Mobile: 2 columns */
  @media (min-width: 640px) {
    .masonry-grid {
      column-count: 2;
    }
  }

  /* Tablet: 3 columns */
  @media (min-width: 1024px) {
    .masonry-grid {
      column-count: 3;
    }
  }

  /* Desktop: 4 columns */
  @media (min-width: 1536px) {
    .masonry-grid {
      column-count: 4;
    }
  }

  .masonry-item {
    break-inside: avoid;
    margin-bottom: 24px;
    position: relative;
    overflow: hidden;
    border-radius: 0.5rem;
    cursor: pointer;
    display: block;
  }

  .masonry-item img {
    width: 100%;
    height: auto;
    display: block;
    transition: transform 0.3s ease;
  }

  .masonry-item:hover img {
    transform: scale(1.05);
  }
</style>


