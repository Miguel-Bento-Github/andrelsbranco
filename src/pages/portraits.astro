---
export const prerender = true;

import { getCollection } from 'astro:content';
import BaseLayout from '../layouts/BaseLayout.astro';
import Header from '../components/Header.astro';
import MasonryGrid from '../components/MasonryGrid.astro';

// Fetch portraits from content collection
const allPortraits = await getCollection('portraits');

// Sort by filename (alphabetically)
const sortedPortraits = allPortraits.sort((a, b) => a.id.localeCompare(b.id));

// Map to image format expected by MasonryGrid
const images = sortedPortraits.map((portrait) => ({
  id: portrait.id,
  src: portrait.data.display || portrait.data.image, // Use display version for gallery, fallback to full-size
  original: portrait.data.image, // Full-size original
  thumbnail: portrait.data.thumbnail,
  alt: portrait.data.title,
  width: portrait.data.width,
  height: portrait.data.height
}));
---

<BaseLayout title="Portraits - AndrÃ© Branco">
  <Header />

  <!-- Inline script to hide section before images load if opening via URL parameter -->
  <script is:inline>
    const urlParams = new URLSearchParams(window.location.search);
    if (urlParams.get('photo')) {
      document.write('<style>#gallery-section { display: none !important; }</style>');
    }
  </script>

  <section class="min-h-screen pt-8 pb-20" id="gallery-section">
    <div class="container mx-auto px-3 md:px-4 max-w-[1920px]">
      <MasonryGrid images={images} />
    </div>
  </section>
</BaseLayout>

<script>
  import { openGallery } from '../scripts/gallery';

  const getImageData = (item: Element) => {
    const img = item.querySelector('img');
    const fullSrc = (item as HTMLElement).dataset.fullSrc;
    const originalSrc = (item as HTMLElement).dataset.originalSrc;
    return {
      src: fullSrc || img?.src || '',
      original: originalSrc || fullSrc || img?.src || '',
      alt: img?.alt || ''
    };
  };

  const bindClicks = (items: Element[], images: { src: string; alt: string }[]) => {
    items.forEach((item, index) => {
      item.addEventListener('click', () => {
        openGallery(images, index);
      });
    });
  };

  const init = () => {
    // Check for photo parameter in URL first
    const urlParams = new URLSearchParams(window.location.search);
    const photoParam = urlParams.get('photo');

    const items = Array.from(document.querySelectorAll('.masonry-item'));
    const images = items.map(getImageData);

    if (photoParam) {
      const photoIndex = parseInt(photoParam, 10) - 1;
      if (photoIndex >= 0 && photoIndex < images.length) {
        // Hide the gallery section to prevent thumbnail loading
        const section = document.getElementById('gallery-section');
        if (section) section.style.display = 'none';

        // Open gallery immediately
        openGallery(images, photoIndex);
        return;
      }
    }

    // Only bind clicks if not opening gallery directly
    bindClicks(items, images);
  };

  init();
</script>
